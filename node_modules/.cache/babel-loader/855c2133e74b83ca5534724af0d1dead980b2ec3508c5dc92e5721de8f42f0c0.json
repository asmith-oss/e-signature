{"ast":null,"code":"import{Component,ComponentContainer}from'@firebase/component';import{Logger,setUserLogHandler,setLogLevel as setLogLevel$1}from'@firebase/logger';import{ErrorFactory,getDefaultAppConfig,deepEqual,isBrowser,isWebWorker,FirebaseError,base64urlEncodeWithoutPadding,isIndexedDBAvailable,validateIndexedDBOpenable}from'@firebase/util';export{FirebaseError}from'@firebase/util';import{openDB}from'idb';/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */class PlatformLoggerServiceImpl{constructor(container){this.container=container;}// In initial implementation, this will be called by installations on\n// auth token refresh, and installations will send this string.\ngetPlatformInfoString(){const providers=this.container.getProviders();// Loop through providers and get library/version pairs from any that are\n// version components.\nreturn providers.map(provider=>{if(isVersionServiceProvider(provider)){const service=provider.getImmediate();return\"\".concat(service.library,\"/\").concat(service.version);}else{return null;}}).filter(logString=>logString).join(' ');}}/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */function isVersionServiceProvider(provider){const component=provider.getComponent();return(component===null||component===void 0?void 0:component.type)===\"VERSION\"/* ComponentType.VERSION */;}const name$q=\"@firebase/app\";const version$1=\"0.10.18\";/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */const logger=new Logger('@firebase/app');const name$p=\"@firebase/app-compat\";const name$o=\"@firebase/analytics-compat\";const name$n=\"@firebase/analytics\";const name$m=\"@firebase/app-check-compat\";const name$l=\"@firebase/app-check\";const name$k=\"@firebase/auth\";const name$j=\"@firebase/auth-compat\";const name$i=\"@firebase/database\";const name$h=\"@firebase/data-connect\";const name$g=\"@firebase/database-compat\";const name$f=\"@firebase/functions\";const name$e=\"@firebase/functions-compat\";const name$d=\"@firebase/installations\";const name$c=\"@firebase/installations-compat\";const name$b=\"@firebase/messaging\";const name$a=\"@firebase/messaging-compat\";const name$9=\"@firebase/performance\";const name$8=\"@firebase/performance-compat\";const name$7=\"@firebase/remote-config\";const name$6=\"@firebase/remote-config-compat\";const name$5=\"@firebase/storage\";const name$4=\"@firebase/storage-compat\";const name$3=\"@firebase/firestore\";const name$2=\"@firebase/vertexai\";const name$1=\"@firebase/firestore-compat\";const name=\"firebase\";const version=\"11.2.0\";/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *//**\n * The default app name\n *\n * @internal\n */const DEFAULT_ENTRY_NAME='[DEFAULT]';const PLATFORM_LOG_STRING={[name$q]:'fire-core',[name$p]:'fire-core-compat',[name$n]:'fire-analytics',[name$o]:'fire-analytics-compat',[name$l]:'fire-app-check',[name$m]:'fire-app-check-compat',[name$k]:'fire-auth',[name$j]:'fire-auth-compat',[name$i]:'fire-rtdb',[name$h]:'fire-data-connect',[name$g]:'fire-rtdb-compat',[name$f]:'fire-fn',[name$e]:'fire-fn-compat',[name$d]:'fire-iid',[name$c]:'fire-iid-compat',[name$b]:'fire-fcm',[name$a]:'fire-fcm-compat',[name$9]:'fire-perf',[name$8]:'fire-perf-compat',[name$7]:'fire-rc',[name$6]:'fire-rc-compat',[name$5]:'fire-gcs',[name$4]:'fire-gcs-compat',[name$3]:'fire-fst',[name$1]:'fire-fst-compat',[name$2]:'fire-vertex','fire-js':'fire-js',// Platform identifier for JS SDK.\n[name]:'fire-js-all'};/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *//**\n * @internal\n */const _apps=new Map();/**\n * @internal\n */const _serverApps=new Map();/**\n * Registered components.\n *\n * @internal\n */// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst _components=new Map();/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */function _addComponent(app,component){try{app.container.addComponent(component);}catch(e){logger.debug(\"Component \".concat(component.name,\" failed to register with FirebaseApp \").concat(app.name),e);}}/**\n *\n * @internal\n */function _addOrOverwriteComponent(app,component){app.container.addOrOverwriteComponent(component);}/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */function _registerComponent(component){const componentName=component.name;if(_components.has(componentName)){logger.debug(\"There were multiple attempts to register component \".concat(componentName,\".\"));return false;}_components.set(componentName,component);// add the component to existing app instances\nfor(const app of _apps.values()){_addComponent(app,component);}for(const serverApp of _serverApps.values()){_addComponent(serverApp,component);}return true;}/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */function _getProvider(app,name){const heartbeatController=app.container.getProvider('heartbeat').getImmediate({optional:true});if(heartbeatController){void heartbeatController.triggerHeartbeat();}return app.container.getProvider(name);}/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */function _removeServiceInstance(app,name){let instanceIdentifier=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_ENTRY_NAME;_getProvider(app,name).clearInstance(instanceIdentifier);}/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */function _isFirebaseApp(obj){return obj.options!==undefined;}/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */function _isFirebaseServerApp(obj){return obj.settings!==undefined;}/**\n * Test only\n *\n * @internal\n */function _clearComponents(){_components.clear();}/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */const ERRORS={[\"no-app\"/* AppError.NO_APP */]:\"No Firebase App '{$appName}' has been created - \"+'call initializeApp() first',[\"bad-app-name\"/* AppError.BAD_APP_NAME */]:\"Illegal App name: '{$appName}'\",[\"duplicate-app\"/* AppError.DUPLICATE_APP */]:\"Firebase App named '{$appName}' already exists with different options or config\",[\"app-deleted\"/* AppError.APP_DELETED */]:\"Firebase App named '{$appName}' already deleted\",[\"server-app-deleted\"/* AppError.SERVER_APP_DELETED */]:'Firebase Server App has been deleted',[\"no-options\"/* AppError.NO_OPTIONS */]:'Need to provide options, when not being deployed to hosting via source.',[\"invalid-app-argument\"/* AppError.INVALID_APP_ARGUMENT */]:'firebase.{$appName}() takes either no argument or a '+'Firebase App instance.',[\"invalid-log-argument\"/* AppError.INVALID_LOG_ARGUMENT */]:'First argument to `onLog` must be null or a function.',[\"idb-open\"/* AppError.IDB_OPEN */]:'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',[\"idb-get\"/* AppError.IDB_GET */]:'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',[\"idb-set\"/* AppError.IDB_WRITE */]:'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',[\"idb-delete\"/* AppError.IDB_DELETE */]:'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',[\"finalization-registry-not-supported\"/* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]:'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',[\"invalid-server-app-environment\"/* AppError.INVALID_SERVER_APP_ENVIRONMENT */]:'FirebaseServerApp is not for use in browser environments.'};const ERROR_FACTORY=new ErrorFactory('app','Firebase',ERRORS);/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */class FirebaseAppImpl{constructor(options,config,container){this._isDeleted=false;this._options=Object.assign({},options);this._config=Object.assign({},config);this._name=config.name;this._automaticDataCollectionEnabled=config.automaticDataCollectionEnabled;this._container=container;this.container.addComponent(new Component('app',()=>this,\"PUBLIC\"/* ComponentType.PUBLIC */));}get automaticDataCollectionEnabled(){this.checkDestroyed();return this._automaticDataCollectionEnabled;}set automaticDataCollectionEnabled(val){this.checkDestroyed();this._automaticDataCollectionEnabled=val;}get name(){this.checkDestroyed();return this._name;}get options(){this.checkDestroyed();return this._options;}get config(){this.checkDestroyed();return this._config;}get container(){return this._container;}get isDeleted(){return this._isDeleted;}set isDeleted(val){this._isDeleted=val;}/**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */checkDestroyed(){if(this.isDeleted){throw ERROR_FACTORY.create(\"app-deleted\"/* AppError.APP_DELETED */,{appName:this._name});}}}/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */class FirebaseServerAppImpl extends FirebaseAppImpl{constructor(options,serverConfig,name,container){// Build configuration parameters for the FirebaseAppImpl base class.\nconst automaticDataCollectionEnabled=serverConfig.automaticDataCollectionEnabled!==undefined?serverConfig.automaticDataCollectionEnabled:false;// Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\nconst config={name,automaticDataCollectionEnabled};if(options.apiKey!==undefined){// Construct the parent FirebaseAppImp object.\nsuper(options,config,container);}else{const appImpl=options;super(appImpl.options,config,container);}// Now construct the data for the FirebaseServerAppImpl.\nthis._serverConfig=Object.assign({automaticDataCollectionEnabled},serverConfig);this._finalizationRegistry=null;if(typeof FinalizationRegistry!=='undefined'){this._finalizationRegistry=new FinalizationRegistry(()=>{this.automaticCleanup();});}this._refCount=0;this.incRefCount(this._serverConfig.releaseOnDeref);// Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n// will never trigger.\nthis._serverConfig.releaseOnDeref=undefined;serverConfig.releaseOnDeref=undefined;registerVersion(name$q,version$1,'serverapp');}toJSON(){return undefined;}get refCount(){return this._refCount;}// Increment the reference count of this server app. If an object is provided, register it\n// with the finalization registry.\nincRefCount(obj){if(this.isDeleted){return;}this._refCount++;if(obj!==undefined&&this._finalizationRegistry!==null){this._finalizationRegistry.register(obj,this);}}// Decrement the reference count.\ndecRefCount(){if(this.isDeleted){return 0;}return--this._refCount;}// Invoked by the FinalizationRegistry callback to note that this app should go through its\n// reference counts and delete itself if no reference count remain. The coordinating logic that\n// handles this is in deleteApp(...).\nautomaticCleanup(){void deleteApp(this);}get settings(){this.checkDestroyed();return this._serverConfig;}/**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */checkDestroyed(){if(this.isDeleted){throw ERROR_FACTORY.create(\"server-app-deleted\"/* AppError.SERVER_APP_DELETED */);}}}/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *//**\n * The current SDK version.\n *\n * @public\n */const SDK_VERSION=version;function initializeApp(_options){let rawConfig=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let options=_options;if(typeof rawConfig!=='object'){const name=rawConfig;rawConfig={name};}const config=Object.assign({name:DEFAULT_ENTRY_NAME,automaticDataCollectionEnabled:false},rawConfig);const name=config.name;if(typeof name!=='string'||!name){throw ERROR_FACTORY.create(\"bad-app-name\"/* AppError.BAD_APP_NAME */,{appName:String(name)});}options||(options=getDefaultAppConfig());if(!options){throw ERROR_FACTORY.create(\"no-options\"/* AppError.NO_OPTIONS */);}const existingApp=_apps.get(name);if(existingApp){// return the existing app if options and config deep equal the ones in the existing app.\nif(deepEqual(options,existingApp.options)&&deepEqual(config,existingApp.config)){return existingApp;}else{throw ERROR_FACTORY.create(\"duplicate-app\"/* AppError.DUPLICATE_APP */,{appName:name});}}const container=new ComponentContainer(name);for(const component of _components.values()){container.addComponent(component);}const newApp=new FirebaseAppImpl(options,config,container);_apps.set(name,newApp);return newApp;}function initializeServerApp(_options,_serverAppConfig){if(isBrowser()&&!isWebWorker()){// FirebaseServerApp isn't designed to be run in browsers.\nthrow ERROR_FACTORY.create(\"invalid-server-app-environment\"/* AppError.INVALID_SERVER_APP_ENVIRONMENT */);}if(_serverAppConfig.automaticDataCollectionEnabled===undefined){_serverAppConfig.automaticDataCollectionEnabled=false;}let appOptions;if(_isFirebaseApp(_options)){appOptions=_options.options;}else{appOptions=_options;}// Build an app name based on a hash of the configuration options.\nconst nameObj=Object.assign(Object.assign({},_serverAppConfig),appOptions);// However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n// construction of FirebaseServerApp instances. For example, if the object is the request headers.\nif(nameObj.releaseOnDeref!==undefined){delete nameObj.releaseOnDeref;}const hashCode=s=>{return[...s].reduce((hash,c)=>Math.imul(31,hash)+c.charCodeAt(0)|0,0);};if(_serverAppConfig.releaseOnDeref!==undefined){if(typeof FinalizationRegistry==='undefined'){throw ERROR_FACTORY.create(\"finalization-registry-not-supported\"/* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */,{});}}const nameString=''+hashCode(JSON.stringify(nameObj));const existingApp=_serverApps.get(nameString);if(existingApp){existingApp.incRefCount(_serverAppConfig.releaseOnDeref);return existingApp;}const container=new ComponentContainer(nameString);for(const component of _components.values()){container.addComponent(component);}const newApp=new FirebaseServerAppImpl(appOptions,_serverAppConfig,nameString,container);_serverApps.set(nameString,newApp);return newApp;}/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */function getApp(){let name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_ENTRY_NAME;const app=_apps.get(name);if(!app&&name===DEFAULT_ENTRY_NAME&&getDefaultAppConfig()){return initializeApp();}if(!app){throw ERROR_FACTORY.create(\"no-app\"/* AppError.NO_APP */,{appName:name});}return app;}/**\n * A (read-only) array of all initialized apps.\n * @public\n */function getApps(){return Array.from(_apps.values());}/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */async function deleteApp(app){let cleanupProviders=false;const name=app.name;if(_apps.has(name)){cleanupProviders=true;_apps.delete(name);}else if(_serverApps.has(name)){const firebaseServerApp=app;if(firebaseServerApp.decRefCount()<=0){_serverApps.delete(name);cleanupProviders=true;}}if(cleanupProviders){await Promise.all(app.container.getProviders().map(provider=>provider.delete()));app.isDeleted=true;}}/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */function registerVersion(libraryKeyOrName,version,variant){var _a;// TODO: We can use this check to whitelist strings when/if we set up\n// a good whitelist system.\nlet library=(_a=PLATFORM_LOG_STRING[libraryKeyOrName])!==null&&_a!==void 0?_a:libraryKeyOrName;if(variant){library+=\"-\".concat(variant);}const libraryMismatch=library.match(/\\s|\\//);const versionMismatch=version.match(/\\s|\\//);if(libraryMismatch||versionMismatch){const warning=[\"Unable to register library \\\"\".concat(library,\"\\\" with version \\\"\").concat(version,\"\\\":\")];if(libraryMismatch){warning.push(\"library name \\\"\".concat(library,\"\\\" contains illegal characters (whitespace or \\\"/\\\")\"));}if(libraryMismatch&&versionMismatch){warning.push('and');}if(versionMismatch){warning.push(\"version name \\\"\".concat(version,\"\\\" contains illegal characters (whitespace or \\\"/\\\")\"));}logger.warn(warning.join(' '));return;}_registerComponent(new Component(\"\".concat(library,\"-version\"),()=>({library,version}),\"VERSION\"/* ComponentType.VERSION */));}/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */function onLog(logCallback,options){if(logCallback!==null&&typeof logCallback!=='function'){throw ERROR_FACTORY.create(\"invalid-log-argument\"/* AppError.INVALID_LOG_ARGUMENT */);}setUserLogHandler(logCallback,options);}/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */function setLogLevel(logLevel){setLogLevel$1(logLevel);}/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */const DB_NAME='firebase-heartbeat-database';const DB_VERSION=1;const STORE_NAME='firebase-heartbeat-store';let dbPromise=null;function getDbPromise(){if(!dbPromise){dbPromise=openDB(DB_NAME,DB_VERSION,{upgrade:(db,oldVersion)=>{// We don't use 'break' in this switch statement, the fall-through\n// behavior is what we want, because if there are multiple versions between\n// the old version and the current version, we want ALL the migrations\n// that correspond to those versions to run, not only the last one.\n// eslint-disable-next-line default-case\nswitch(oldVersion){case 0:try{db.createObjectStore(STORE_NAME);}catch(e){// Safari/iOS browsers throw occasional exceptions on\n// db.createObjectStore() that may be a bug. Avoid blocking\n// the rest of the app functionality.\nconsole.warn(e);}}}}).catch(e=>{throw ERROR_FACTORY.create(\"idb-open\"/* AppError.IDB_OPEN */,{originalErrorMessage:e.message});});}return dbPromise;}async function readHeartbeatsFromIndexedDB(app){try{const db=await getDbPromise();const tx=db.transaction(STORE_NAME);const result=await tx.objectStore(STORE_NAME).get(computeKey(app));// We already have the value but tx.done can throw,\n// so we need to await it here to catch errors\nawait tx.done;return result;}catch(e){if(e instanceof FirebaseError){logger.warn(e.message);}else{const idbGetError=ERROR_FACTORY.create(\"idb-get\"/* AppError.IDB_GET */,{originalErrorMessage:e===null||e===void 0?void 0:e.message});logger.warn(idbGetError.message);}}}async function writeHeartbeatsToIndexedDB(app,heartbeatObject){try{const db=await getDbPromise();const tx=db.transaction(STORE_NAME,'readwrite');const objectStore=tx.objectStore(STORE_NAME);await objectStore.put(heartbeatObject,computeKey(app));await tx.done;}catch(e){if(e instanceof FirebaseError){logger.warn(e.message);}else{const idbGetError=ERROR_FACTORY.create(\"idb-set\"/* AppError.IDB_WRITE */,{originalErrorMessage:e===null||e===void 0?void 0:e.message});logger.warn(idbGetError.message);}}}function computeKey(app){return\"\".concat(app.name,\"!\").concat(app.options.appId);}/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */const MAX_HEADER_BYTES=1024;// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS=30*24*60*60*1000;class HeartbeatServiceImpl{constructor(container){this.container=container;/**\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n         * the header string.\n         * Stores one record per date. This will be consolidated into the standard\n         * format of one record per user agent string before being sent as a header.\n         * Populated from indexedDB when the controller is instantiated and should\n         * be kept in sync with indexedDB.\n         * Leave public for easier testing.\n         */this._heartbeatsCache=null;const app=this.container.getProvider('app').getImmediate();this._storage=new HeartbeatStorageImpl(app);this._heartbeatsCachePromise=this._storage.read().then(result=>{this._heartbeatsCache=result;return result;});}/**\n     * Called to report a heartbeat. The function will generate\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n     * to IndexedDB.\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\n     * already logged, subsequent calls to this function in the same day will be ignored.\n     */async triggerHeartbeat(){var _a,_b;try{const platformLogger=this.container.getProvider('platform-logger').getImmediate();// This is the \"Firebase user agent\" string from the platform logger\n// service, not the browser user agent.\nconst agent=platformLogger.getPlatformInfoString();const date=getUTCDateString();if(((_a=this._heartbeatsCache)===null||_a===void 0?void 0:_a.heartbeats)==null){this._heartbeatsCache=await this._heartbeatsCachePromise;// If we failed to construct a heartbeats cache, then return immediately.\nif(((_b=this._heartbeatsCache)===null||_b===void 0?void 0:_b.heartbeats)==null){return;}}// Do not store a heartbeat if one is already stored for this day\n// or if a header has already been sent today.\nif(this._heartbeatsCache.lastSentHeartbeatDate===date||this._heartbeatsCache.heartbeats.some(singleDateHeartbeat=>singleDateHeartbeat.date===date)){return;}else{// There is no entry for this date. Create one.\nthis._heartbeatsCache.heartbeats.push({date,agent});}// Remove entries older than 30 days.\nthis._heartbeatsCache.heartbeats=this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat=>{const hbTimestamp=new Date(singleDateHeartbeat.date).valueOf();const now=Date.now();return now-hbTimestamp<=STORED_HEARTBEAT_RETENTION_MAX_MILLIS;});return this._storage.overwrite(this._heartbeatsCache);}catch(e){logger.warn(e);}}/**\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n     * It also clears all heartbeats from memory as well as in IndexedDB.\n     *\n     * NOTE: Consuming product SDKs should not send the header if this method\n     * returns an empty string.\n     */async getHeartbeatsHeader(){var _a;try{if(this._heartbeatsCache===null){await this._heartbeatsCachePromise;}// If it's still null or the array is empty, there is no data to send.\nif(((_a=this._heartbeatsCache)===null||_a===void 0?void 0:_a.heartbeats)==null||this._heartbeatsCache.heartbeats.length===0){return'';}const date=getUTCDateString();// Extract as many heartbeats from the cache as will fit under the size limit.\nconst{heartbeatsToSend,unsentEntries}=extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);const headerString=base64urlEncodeWithoutPadding(JSON.stringify({version:2,heartbeats:heartbeatsToSend}));// Store last sent date to prevent another being logged/sent for the same day.\nthis._heartbeatsCache.lastSentHeartbeatDate=date;if(unsentEntries.length>0){// Store any unsent entries if they exist.\nthis._heartbeatsCache.heartbeats=unsentEntries;// This seems more likely than emptying the array (below) to lead to some odd state\n// since the cache isn't empty and this will be called again on the next request,\n// and is probably safest if we await it.\nawait this._storage.overwrite(this._heartbeatsCache);}else{this._heartbeatsCache.heartbeats=[];// Do not wait for this, to reduce latency.\nvoid this._storage.overwrite(this._heartbeatsCache);}return headerString;}catch(e){logger.warn(e);return'';}}}function getUTCDateString(){const today=new Date();// Returns date format 'YYYY-MM-DD'\nreturn today.toISOString().substring(0,10);}function extractHeartbeatsForHeader(heartbeatsCache){let maxSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:MAX_HEADER_BYTES;// Heartbeats grouped by user agent in the standard format to be sent in\n// the header.\nconst heartbeatsToSend=[];// Single date format heartbeats that are not sent.\nlet unsentEntries=heartbeatsCache.slice();for(const singleDateHeartbeat of heartbeatsCache){// Look for an existing entry with the same user agent.\nconst heartbeatEntry=heartbeatsToSend.find(hb=>hb.agent===singleDateHeartbeat.agent);if(!heartbeatEntry){// If no entry for this user agent exists, create one.\nheartbeatsToSend.push({agent:singleDateHeartbeat.agent,dates:[singleDateHeartbeat.date]});if(countBytes(heartbeatsToSend)>maxSize){// If the header would exceed max size, remove the added heartbeat\n// entry and stop adding to the header.\nheartbeatsToSend.pop();break;}}else{heartbeatEntry.dates.push(singleDateHeartbeat.date);// If the header would exceed max size, remove the added date\n// and stop adding to the header.\nif(countBytes(heartbeatsToSend)>maxSize){heartbeatEntry.dates.pop();break;}}// Pop unsent entry from queue. (Skipped if adding the entry exceeded\n// quota and the loop breaks early.)\nunsentEntries=unsentEntries.slice(1);}return{heartbeatsToSend,unsentEntries};}class HeartbeatStorageImpl{constructor(app){this.app=app;this._canUseIndexedDBPromise=this.runIndexedDBEnvironmentCheck();}async runIndexedDBEnvironmentCheck(){if(!isIndexedDBAvailable()){return false;}else{return validateIndexedDBOpenable().then(()=>true).catch(()=>false);}}/**\n     * Read all heartbeats.\n     */async read(){const canUseIndexedDB=await this._canUseIndexedDBPromise;if(!canUseIndexedDB){return{heartbeats:[]};}else{const idbHeartbeatObject=await readHeartbeatsFromIndexedDB(this.app);if(idbHeartbeatObject===null||idbHeartbeatObject===void 0?void 0:idbHeartbeatObject.heartbeats){return idbHeartbeatObject;}else{return{heartbeats:[]};}}}// overwrite the storage with the provided heartbeats\nasync overwrite(heartbeatsObject){var _a;const canUseIndexedDB=await this._canUseIndexedDBPromise;if(!canUseIndexedDB){return;}else{const existingHeartbeatsObject=await this.read();return writeHeartbeatsToIndexedDB(this.app,{lastSentHeartbeatDate:(_a=heartbeatsObject.lastSentHeartbeatDate)!==null&&_a!==void 0?_a:existingHeartbeatsObject.lastSentHeartbeatDate,heartbeats:heartbeatsObject.heartbeats});}}// add heartbeats\nasync add(heartbeatsObject){var _a;const canUseIndexedDB=await this._canUseIndexedDBPromise;if(!canUseIndexedDB){return;}else{const existingHeartbeatsObject=await this.read();return writeHeartbeatsToIndexedDB(this.app,{lastSentHeartbeatDate:(_a=heartbeatsObject.lastSentHeartbeatDate)!==null&&_a!==void 0?_a:existingHeartbeatsObject.lastSentHeartbeatDate,heartbeats:[...existingHeartbeatsObject.heartbeats,...heartbeatsObject.heartbeats]});}}}/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */function countBytes(heartbeatsCache){// base64 has a restricted set of characters, all of which should be 1 byte.\nreturn base64urlEncodeWithoutPadding(// heartbeatsCache wrapper properties\nJSON.stringify({version:2,heartbeats:heartbeatsCache})).length;}/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */function registerCoreComponents(variant){_registerComponent(new Component('platform-logger',container=>new PlatformLoggerServiceImpl(container),\"PRIVATE\"/* ComponentType.PRIVATE */));_registerComponent(new Component('heartbeat',container=>new HeartbeatServiceImpl(container),\"PRIVATE\"/* ComponentType.PRIVATE */));// Register `app` package.\nregisterVersion(name$q,version$1,variant);// BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\nregisterVersion(name$q,version$1,'esm2017');// Register platform SDK identifier (no version).\nregisterVersion('fire-js','');}/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */registerCoreComponents('');export{SDK_VERSION,DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME,_addComponent,_addOrOverwriteComponent,_apps,_clearComponents,_components,_getProvider,_isFirebaseApp,_isFirebaseServerApp,_registerComponent,_removeServiceInstance,_serverApps,deleteApp,getApp,getApps,initializeApp,initializeServerApp,onLog,registerVersion,setLogLevel};","map":{"version":3,"names":["PlatformLoggerServiceImpl","constructor","container","getPlatformInfoString","providers","getProviders","map","provider","isVersionServiceProvider","service","getImmediate","concat","library","version","filter","logString","join","component","getComponent","type","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","name$q","name$p","name$n","name$o","name$l","name$m","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$1","name$2","name","_apps","Map","_serverApps","_components","_addComponent","app","addComponent","e","debug","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","componentName","has","set","values","serverApp","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","_removeServiceInstance","instanceIdentifier","arguments","length","undefined","clearInstance","_isFirebaseApp","obj","options","_isFirebaseServerApp","settings","_clearComponents","clear","ERRORS","ERROR_FACTORY","ErrorFactory","FirebaseAppImpl","config","_isDeleted","_options","Object","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","checkDestroyed","val","isDeleted","create","appName","FirebaseServerAppImpl","serverConfig","apiKey","appImpl","_serverConfig","_finalizationRegistry","FinalizationRegistry","automaticCleanup","_refCount","incRefCount","releaseOnDeref","registerVersion","version$1","toJSON","refCount","register","decRefCount","deleteApp","SDK_VERSION","initializeApp","rawConfig","String","getDefaultAppConfig","existingApp","get","deepEqual","ComponentContainer","newApp","initializeServerApp","_serverAppConfig","isBrowser","isWebWorker","appOptions","nameObj","hashCode","s","reduce","hash","c","Math","imul","charCodeAt","nameString","JSON","stringify","getApp","getApps","Array","from","cleanupProviders","delete","firebaseServerApp","Promise","all","libraryKeyOrName","variant","_a","libraryMismatch","match","versionMismatch","warning","push","warn","onLog","logCallback","setUserLogHandler","setLogLevel","logLevel","setLogLevel$1","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","db","oldVersion","createObjectStore","console","catch","originalErrorMessage","message","readHeartbeatsFromIndexedDB","tx","transaction","result","objectStore","computeKey","done","FirebaseError","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","then","platformLogger","agent","date","getUTCDateString","heartbeats","_b","lastSentHeartbeatDate","some","singleDateHeartbeat","hbTimestamp","Date","valueOf","now","overwrite","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","extractHeartbeatsForHeader","headerString","base64urlEncodeWithoutPadding","today","toISOString","substring","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","isIndexedDBAvailable","validateIndexedDBOpenable","canUseIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","add","registerCoreComponents"],"sources":["C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\platformLoggerService.ts","C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\logger.ts","C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\constants.ts","C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\internal.ts","C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\errors.ts","C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\firebaseApp.ts","C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\firebaseServerApp.ts","C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\api.ts","C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\indexeddb.ts","C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\heartbeatService.ts","C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\registerCoreComponents.ts","C:\\Users\\aaron\\frontend\\my-react-app\\src\\node_modules\\@firebase\\app\\src\\index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as dataconnectName } from '../../../packages/data-connect/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as vertexName } from '../../../packages/vertexai/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [dataconnectName]: 'fire-data-connect',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  [vertexName]: 'fire-vertex',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp\n): obj is FirebaseServerApp {\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseAppSettings,\n  FirebaseServerApp,\n  FirebaseServerAppSettings,\n  FirebaseOptions\n} from './public-types';\nimport { deleteApp, registerVersion } from './api';\nimport { ComponentContainer } from '@firebase/component';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { name as packageName, version } from '../package.json';\n\nexport class FirebaseServerAppImpl\n  extends FirebaseAppImpl\n  implements FirebaseServerApp\n{\n  private readonly _serverConfig: FirebaseServerAppSettings;\n  private _finalizationRegistry: FinalizationRegistry<object> | null;\n  private _refCount: number;\n\n  constructor(\n    options: FirebaseOptions | FirebaseAppImpl,\n    serverConfig: FirebaseServerAppSettings,\n    name: string,\n    container: ComponentContainer\n  ) {\n    // Build configuration parameters for the FirebaseAppImpl base class.\n    const automaticDataCollectionEnabled =\n      serverConfig.automaticDataCollectionEnabled !== undefined\n        ? serverConfig.automaticDataCollectionEnabled\n        : false;\n\n    // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n    const config: Required<FirebaseAppSettings> = {\n      name,\n      automaticDataCollectionEnabled\n    };\n\n    if ((options as FirebaseOptions).apiKey !== undefined) {\n      // Construct the parent FirebaseAppImp object.\n      super(options as FirebaseOptions, config, container);\n    } else {\n      const appImpl: FirebaseAppImpl = options as FirebaseAppImpl;\n      super(appImpl.options, config, container);\n    }\n\n    // Now construct the data for the FirebaseServerAppImpl.\n    this._serverConfig = {\n      automaticDataCollectionEnabled,\n      ...serverConfig\n    };\n\n    this._finalizationRegistry = null;\n    if (typeof FinalizationRegistry !== 'undefined') {\n      this._finalizationRegistry = new FinalizationRegistry(() => {\n        this.automaticCleanup();\n      });\n    }\n\n    this._refCount = 0;\n    this.incRefCount(this._serverConfig.releaseOnDeref);\n\n    // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n    // will never trigger.\n    this._serverConfig.releaseOnDeref = undefined;\n    serverConfig.releaseOnDeref = undefined;\n\n    registerVersion(packageName, version, 'serverapp');\n  }\n\n  toJSON(): undefined {\n    return undefined;\n  }\n\n  get refCount(): number {\n    return this._refCount;\n  }\n\n  // Increment the reference count of this server app. If an object is provided, register it\n  // with the finalization registry.\n  incRefCount(obj: object | undefined): void {\n    if (this.isDeleted) {\n      return;\n    }\n    this._refCount++;\n    if (obj !== undefined && this._finalizationRegistry !== null) {\n      this._finalizationRegistry.register(obj, this);\n    }\n  }\n\n  // Decrement the reference count.\n  decRefCount(): number {\n    if (this.isDeleted) {\n      return 0;\n    }\n    return --this._refCount;\n  }\n\n  // Invoked by the FinalizationRegistry callback to note that this app should go through its\n  // reference counts and delete itself if no reference count remain. The coordinating logic that\n  // handles this is in deleteApp(...).\n  private automaticCleanup(): void {\n    void deleteApp(this);\n  }\n\n  get settings(): FirebaseServerAppSettings {\n    this.checkDestroyed();\n    return this._serverConfig;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.SERVER_APP_DELETED);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport {\n  deepEqual,\n  getDefaultAppConfig,\n  isBrowser,\n  isWebWorker\n} from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser() && !isWebWorker()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\nimport { logger } from './logger';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (heartbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    try {\n      const platformLogger = this.container\n        .getProvider('platform-logger')\n        .getImmediate();\n\n      // This is the \"Firebase user agent\" string from the platform logger\n      // service, not the browser user agent.\n      const agent = platformLogger.getPlatformInfoString();\n      const date = getUTCDateString();\n      if (this._heartbeatsCache?.heartbeats == null) {\n        this._heartbeatsCache = await this._heartbeatsCachePromise;\n        // If we failed to construct a heartbeats cache, then return immediately.\n        if (this._heartbeatsCache?.heartbeats == null) {\n          return;\n        }\n      }\n      // Do not store a heartbeat if one is already stored for this day\n      // or if a header has already been sent today.\n      if (\n        this._heartbeatsCache.lastSentHeartbeatDate === date ||\n        this._heartbeatsCache.heartbeats.some(\n          singleDateHeartbeat => singleDateHeartbeat.date === date\n        )\n      ) {\n        return;\n      } else {\n        // There is no entry for this date. Create one.\n        this._heartbeatsCache.heartbeats.push({ date, agent });\n      }\n      // Remove entries older than 30 days.\n      this._heartbeatsCache.heartbeats =\n        this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\n          const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n          const now = Date.now();\n          return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n        });\n      return this._storage.overwrite(this._heartbeatsCache);\n    } catch (e) {\n      logger.warn(e);\n    }\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    try {\n      if (this._heartbeatsCache === null) {\n        await this._heartbeatsCachePromise;\n      }\n      // If it's still null or the array is empty, there is no data to send.\n      if (\n        this._heartbeatsCache?.heartbeats == null ||\n        this._heartbeatsCache.heartbeats.length === 0\n      ) {\n        return '';\n      }\n      const date = getUTCDateString();\n      // Extract as many heartbeats from the cache as will fit under the size limit.\n      const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n        this._heartbeatsCache.heartbeats\n      );\n      const headerString = base64urlEncodeWithoutPadding(\n        JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n      );\n      // Store last sent date to prevent another being logged/sent for the same day.\n      this._heartbeatsCache.lastSentHeartbeatDate = date;\n      if (unsentEntries.length > 0) {\n        // Store any unsent entries if they exist.\n        this._heartbeatsCache.heartbeats = unsentEntries;\n        // This seems more likely than emptying the array (below) to lead to some odd state\n        // since the cache isn't empty and this will be called again on the next request,\n        // and is probably safest if we await it.\n        await this._storage.overwrite(this._heartbeatsCache);\n      } else {\n        this._heartbeatsCache.heartbeats = [];\n        // Do not wait for this, to reduce latency.\n        void this._storage.overwrite(this._heartbeatsCache);\n      }\n      return headerString;\n    } catch (e) {\n      logger.warn(e);\n      return '';\n    }\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}