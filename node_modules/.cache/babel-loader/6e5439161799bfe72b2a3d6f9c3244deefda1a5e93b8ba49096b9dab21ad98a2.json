{"ast":null,"code":"import _objectSpread from\"C:/Users/aaron/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{w as wrap,r as replaceTraps}from'./wrap-idb-value.js';export{u as unwrap,w as wrap}from'./wrap-idb-value.js';/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */function openDB(name,version){let{blocked,upgrade,blocking,terminated}=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const request=indexedDB.open(name,version);const openPromise=wrap(request);if(upgrade){request.addEventListener('upgradeneeded',event=>{upgrade(wrap(request.result),event.oldVersion,event.newVersion,wrap(request.transaction),event);});}if(blocked){request.addEventListener('blocked',event=>blocked(// Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\nevent.oldVersion,event.newVersion,event));}openPromise.then(db=>{if(terminated)db.addEventListener('close',()=>terminated());if(blocking){db.addEventListener('versionchange',event=>blocking(event.oldVersion,event.newVersion,event));}}).catch(()=>{});return openPromise;}/**\n * Delete a database.\n *\n * @param name Name of the database.\n */function deleteDB(name){let{blocked}=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const request=indexedDB.deleteDatabase(name);if(blocked){request.addEventListener('blocked',event=>blocked(// Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\nevent.oldVersion,event));}return wrap(request).then(()=>undefined);}const readMethods=['get','getKey','getAll','getAllKeys','count'];const writeMethods=['put','add','delete','clear'];const cachedMethods=new Map();function getMethod(target,prop){if(!(target instanceof IDBDatabase&&!(prop in target)&&typeof prop==='string')){return;}if(cachedMethods.get(prop))return cachedMethods.get(prop);const targetFuncName=prop.replace(/FromIndex$/,'');const useIndex=prop!==targetFuncName;const isWrite=writeMethods.includes(targetFuncName);if(// Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n!(targetFuncName in(useIndex?IDBIndex:IDBObjectStore).prototype)||!(isWrite||readMethods.includes(targetFuncName))){return;}const method=async function(storeName){// isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\nconst tx=this.transaction(storeName,isWrite?'readwrite':'readonly');let target=tx.store;for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}if(useIndex)target=target.index(args.shift());// Must reject if op rejects.\n// If it's a write operation, must reject if tx.done rejects.\n// Must reject with op rejection first.\n// Must resolve with op value.\n// Must handle both promises (no unhandled rejections)\nreturn(await Promise.all([target[targetFuncName](...args),isWrite&&tx.done]))[0];};cachedMethods.set(prop,method);return method;}replaceTraps(oldTraps=>_objectSpread(_objectSpread({},oldTraps),{},{get:(target,prop,receiver)=>getMethod(target,prop)||oldTraps.get(target,prop,receiver),has:(target,prop)=>!!getMethod(target,prop)||oldTraps.has(target,prop)}));export{deleteDB,openDB};","map":{"version":3,"names":["w","wrap","r","replaceTraps","u","unwrap","openDB","name","version","blocked","upgrade","blocking","terminated","arguments","length","undefined","request","indexedDB","open","openPromise","addEventListener","event","result","oldVersion","newVersion","transaction","then","db","catch","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","target","prop","IDBDatabase","get","targetFuncName","replace","useIndex","isWrite","includes","IDBIndex","IDBObjectStore","prototype","method","storeName","tx","store","_len","args","Array","_key","index","shift","Promise","all","done","set","oldTraps","_objectSpread","receiver","has"],"sources":["C:/Users/aaron/frontend/my-react-app/src/node_modules/idb/build/index.js"],"sourcesContent":["import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n"],"mappings":"yHAAA,OAASA,CAAC,GAAI,CAAAC,IAAI,CAAEC,CAAC,GAAI,CAAAC,YAAY,KAAQ,qBAAqB,CAClE,OAASC,CAAC,GAAI,CAAAC,MAAM,CAAEL,CAAC,GAAI,CAAAC,IAAI,KAAQ,qBAAqB,CAE5D;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAK,MAAMA,CAACC,IAAI,CAAEC,OAAO,CAAmD,IAAjD,CAAEC,OAAO,CAAEC,OAAO,CAAEC,QAAQ,CAAEC,UAAW,CAAC,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC1E,KAAM,CAAAG,OAAO,CAAGC,SAAS,CAACC,IAAI,CAACX,IAAI,CAAEC,OAAO,CAAC,CAC7C,KAAM,CAAAW,WAAW,CAAGlB,IAAI,CAACe,OAAO,CAAC,CACjC,GAAIN,OAAO,CAAE,CACTM,OAAO,CAACI,gBAAgB,CAAC,eAAe,CAAGC,KAAK,EAAK,CACjDX,OAAO,CAACT,IAAI,CAACe,OAAO,CAACM,MAAM,CAAC,CAAED,KAAK,CAACE,UAAU,CAAEF,KAAK,CAACG,UAAU,CAAEvB,IAAI,CAACe,OAAO,CAACS,WAAW,CAAC,CAAEJ,KAAK,CAAC,CACvG,CAAC,CAAC,CACN,CACA,GAAIZ,OAAO,CAAE,CACTO,OAAO,CAACI,gBAAgB,CAAC,SAAS,CAAGC,KAAK,EAAKZ,OAAO,CACtD;AACAY,KAAK,CAACE,UAAU,CAAEF,KAAK,CAACG,UAAU,CAAEH,KAAK,CAAC,CAAC,CAC/C,CACAF,WAAW,CACNO,IAAI,CAAEC,EAAE,EAAK,CACd,GAAIf,UAAU,CACVe,EAAE,CAACP,gBAAgB,CAAC,OAAO,CAAE,IAAMR,UAAU,CAAC,CAAC,CAAC,CACpD,GAAID,QAAQ,CAAE,CACVgB,EAAE,CAACP,gBAAgB,CAAC,eAAe,CAAGC,KAAK,EAAKV,QAAQ,CAACU,KAAK,CAACE,UAAU,CAAEF,KAAK,CAACG,UAAU,CAAEH,KAAK,CAAC,CAAC,CACxG,CACJ,CAAC,CAAC,CACGO,KAAK,CAAC,IAAM,CAAE,CAAC,CAAC,CACrB,MAAO,CAAAT,WAAW,CACtB,CACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAU,QAAQA,CAACtB,IAAI,CAAoB,IAAlB,CAAEE,OAAQ,CAAC,CAAAI,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACpC,KAAM,CAAAG,OAAO,CAAGC,SAAS,CAACa,cAAc,CAACvB,IAAI,CAAC,CAC9C,GAAIE,OAAO,CAAE,CACTO,OAAO,CAACI,gBAAgB,CAAC,SAAS,CAAGC,KAAK,EAAKZ,OAAO,CACtD;AACAY,KAAK,CAACE,UAAU,CAAEF,KAAK,CAAC,CAAC,CAC7B,CACA,MAAO,CAAApB,IAAI,CAACe,OAAO,CAAC,CAACU,IAAI,CAAC,IAAMX,SAAS,CAAC,CAC9C,CAEA,KAAM,CAAAgB,WAAW,CAAG,CAAC,KAAK,CAAE,QAAQ,CAAE,QAAQ,CAAE,YAAY,CAAE,OAAO,CAAC,CACtE,KAAM,CAAAC,YAAY,CAAG,CAAC,KAAK,CAAE,KAAK,CAAE,QAAQ,CAAE,OAAO,CAAC,CACtD,KAAM,CAAAC,aAAa,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAC/B,QAAS,CAAAC,SAASA,CAACC,MAAM,CAAEC,IAAI,CAAE,CAC7B,GAAI,EAAED,MAAM,WAAY,CAAAE,WAAW,EAC/B,EAAED,IAAI,GAAI,CAAAD,MAAM,CAAC,EACjB,MAAO,CAAAC,IAAI,GAAK,QAAQ,CAAC,CAAE,CAC3B,OACJ,CACA,GAAIJ,aAAa,CAACM,GAAG,CAACF,IAAI,CAAC,CACvB,MAAO,CAAAJ,aAAa,CAACM,GAAG,CAACF,IAAI,CAAC,CAClC,KAAM,CAAAG,cAAc,CAAGH,IAAI,CAACI,OAAO,CAAC,YAAY,CAAE,EAAE,CAAC,CACrD,KAAM,CAAAC,QAAQ,CAAGL,IAAI,GAAKG,cAAc,CACxC,KAAM,CAAAG,OAAO,CAAGX,YAAY,CAACY,QAAQ,CAACJ,cAAc,CAAC,CACrD,GACA;AACA,EAAEA,cAAc,GAAI,CAACE,QAAQ,CAAGG,QAAQ,CAAGC,cAAc,EAAEC,SAAS,CAAC,EACjE,EAAEJ,OAAO,EAAIZ,WAAW,CAACa,QAAQ,CAACJ,cAAc,CAAC,CAAC,CAAE,CACpD,OACJ,CACA,KAAM,CAAAQ,MAAM,CAAG,cAAAA,CAAgBC,SAAS,CAAW,CAC/C;AACA,KAAM,CAAAC,EAAE,CAAG,IAAI,CAACzB,WAAW,CAACwB,SAAS,CAAEN,OAAO,CAAG,WAAW,CAAG,UAAU,CAAC,CAC1E,GAAI,CAAAP,MAAM,CAAGc,EAAE,CAACC,KAAK,CAAC,QAAAC,IAAA,CAAAvC,SAAA,CAAAC,MAAA,CAHmBuC,IAAI,KAAAC,KAAA,CAAAF,IAAA,GAAAA,IAAA,MAAAG,IAAA,GAAAA,IAAA,CAAAH,IAAA,CAAAG,IAAA,IAAJF,IAAI,CAAAE,IAAA,IAAA1C,SAAA,CAAA0C,IAAA,GAI7C,GAAIb,QAAQ,CACRN,MAAM,CAAGA,MAAM,CAACoB,KAAK,CAACH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC,CACvC;AACA;AACA;AACA;AACA;AACA,MAAO,CAAC,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CACtBvB,MAAM,CAACI,cAAc,CAAC,CAAC,GAAGa,IAAI,CAAC,CAC/BV,OAAO,EAAIO,EAAE,CAACU,IAAI,CACrB,CAAC,EAAE,CAAC,CAAC,CACV,CAAC,CACD3B,aAAa,CAAC4B,GAAG,CAACxB,IAAI,CAAEW,MAAM,CAAC,CAC/B,MAAO,CAAAA,MAAM,CACjB,CACA7C,YAAY,CAAE2D,QAAQ,EAAAC,aAAA,CAAAA,aAAA,IACfD,QAAQ,MACXvB,GAAG,CAAEA,CAACH,MAAM,CAAEC,IAAI,CAAE2B,QAAQ,GAAK7B,SAAS,CAACC,MAAM,CAAEC,IAAI,CAAC,EAAIyB,QAAQ,CAACvB,GAAG,CAACH,MAAM,CAAEC,IAAI,CAAE2B,QAAQ,CAAC,CAChGC,GAAG,CAAEA,CAAC7B,MAAM,CAAEC,IAAI,GAAK,CAAC,CAACF,SAAS,CAACC,MAAM,CAAEC,IAAI,CAAC,EAAIyB,QAAQ,CAACG,GAAG,CAAC7B,MAAM,CAAEC,IAAI,CAAC,EAChF,CAAC,CAEH,OAASR,QAAQ,CAAEvB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}